version: '3.8'

services:
  keycloak:
    image: quay.io/keycloak/keycloak:22.0.5
    command: start-dev
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://postgres:5432/keycloak
      - KC_DB_USERNAME=keycloak
      - KC_DB_PASSWORD=password
      - KC_HTTP_RELATIVE_PATH=/auth
      - KC_PROXY=edge
      - KC_HOSTNAME_STRICT=false
      - KC_HOSTNAME_STRICT_HTTPS=false
      - KC_HTTP_ENABLED=true
      - KC_HTTP_PORT=8080
      - KC_HOSTNAME=localhost
      - KC_HOSTNAME_PORT=8080
      - JAVA_OPTS=-Xms512m -Xmx1024m
      - KC_HEALTH_ENABLED=true
    ports:
      - "8080:8080"
    volumes:
      - ./keycloak/themes:/opt/keycloak/themes:ro
      - ./keycloak/conf:/opt/keycloak/conf:ro
    networks:
      - app-network
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/auth/health/ready || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    networks:
      - app-network
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U keycloak"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped

  api:
    image: node:18
    working_dir: /app
    volumes:
      - .:/app
    command: npm run start:api
    ports:
      - "3000:3000"
    networks:
      - app-network
    depends_on:
      - keycloak

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local